(function() {var implementors = {};
implementors["account"] = [{"text":"impl RefUnwindSafe for EthereumSignature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EthereumSigner","synthetic":true,"types":[]}];
implementors["moonbase_runtime"] = [{"text":"impl RefUnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !RefUnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_cli"] = [{"text":"impl RefUnwindSafe for Subcommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BuildSpecCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportGenesisStateCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExportGenesisWasmCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RunCmd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cli","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RelayChainCli","synthetic":true,"types":[]}];
implementors["moonbeam_cli_opt"] = [{"text":"impl RefUnwindSafe for Sealing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EthApi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RpcParams","synthetic":true,"types":[]}];
implementors["moonbeam_extensions_evm"] = [{"text":"impl&lt;'config, S&gt; RefUnwindSafe for TraceExecutorWrapper&lt;'config, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_debug"] = [{"text":"impl RefUnwindSafe for TraceParams","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_trace"] = [{"text":"impl RefUnwindSafe for FilterRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestBlockId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestBlockTag","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_txpool"] = [{"text":"impl RefUnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Summary","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for TxPoolResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_debug"] = [{"text":"impl !RefUnwindSafe for Debug","synthetic":true,"types":[]},{"text":"impl&lt;B, C, BE&gt; RefUnwindSafe for DebugHandler&lt;B, C, BE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;BE: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_primitives_debug"] = [{"text":"impl RefUnwindSafe for TransactionTrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionTraceAction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionTraceOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionTraceResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraceType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionTrace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawStepLog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallInner","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CallType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateType","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_primitives_txpool"] = [{"text":"impl RefUnwindSafe for TxPoolResponse","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_trace"] = [{"text":"impl&lt;B, C&gt; !RefUnwindSafe for Trace&lt;B, C&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheBatchId","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for CacheRequester","synthetic":true,"types":[]},{"text":"impl&lt;B, C, BE&gt; !RefUnwindSafe for CacheTask&lt;B, C, BE&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_txpool"] = [{"text":"impl&lt;B, C, A&gt; !RefUnwindSafe for TxPool&lt;B, C, A&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_runtime"] = [{"text":"impl RefUnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !RefUnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_service"] = [{"text":"impl RefUnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtensionsFork","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbeamExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonriverExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonshadowExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbaseExecutor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionConverters","synthetic":true,"types":[]}];
implementors["moonkey"] = [{"text":"impl RefUnwindSafe for Opts","synthetic":true,"types":[]}];
implementors["moonriver_runtime"] = [{"text":"impl RefUnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !RefUnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonshadow_runtime"] = [{"text":"impl RefUnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !RefUnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["pallet_author_mapping"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for GenesisConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["pallet_ethereum_chain_id"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStorageChainId&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["parachain_staking"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Range&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Balance&gt; RefUnwindSafe for InflationInfo&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SubstrateWeight&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; RefUnwindSafe for Bond&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollatorStatus","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; RefUnwindSafe for CollatorSnapshot&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; RefUnwindSafe for Collator&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; RefUnwindSafe for Nominator&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;BlockNumber&gt; RefUnwindSafe for RoundInfo&lt;BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::BlockNumber: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for GenesisConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStorageAtStake&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStorageStaked&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStorageInflationConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStoragePoints&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for _GeneratedPrefixForStorageAwardedPts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["precompiles"] = [{"text":"impl&lt;R&gt; RefUnwindSafe for MoonbeamPrecompiles&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()