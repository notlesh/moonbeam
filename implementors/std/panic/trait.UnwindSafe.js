(function() {var implementors = {};
implementors["account"] = [{"text":"impl UnwindSafe for EthereumSignature","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EthereumSigner","synthetic":true,"types":[]}];
implementors["moonbase_runtime"] = [{"text":"impl UnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !UnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_cli"] = [{"text":"impl UnwindSafe for Subcommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BuildSpecCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportGenesisStateCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExportGenesisWasmCommand","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RunCmd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Cli","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RelayChainCli","synthetic":true,"types":[]}];
implementors["moonbeam_cli_opt"] = [{"text":"impl UnwindSafe for Sealing","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EthApi","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RpcParams","synthetic":true,"types":[]}];
implementors["moonbeam_extensions_evm"] = [{"text":"impl&lt;'config, S&gt; !UnwindSafe for TraceExecutorWrapper&lt;'config, S&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_debug"] = [{"text":"impl UnwindSafe for TraceParams","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_trace"] = [{"text":"impl UnwindSafe for FilterRequest","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestBlockId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequestBlockTag","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_core_txpool"] = [{"text":"impl UnwindSafe for Transaction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Summary","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for TxPoolResult&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_debug"] = [{"text":"impl !UnwindSafe for Debug","synthetic":true,"types":[]},{"text":"impl&lt;B, C, BE&gt; UnwindSafe for DebugHandler&lt;B, C, BE&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;B: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;BE: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_primitives_debug"] = [{"text":"impl UnwindSafe for TransactionTrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionTraceAction","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionTraceOutput","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionTraceResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TraceType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionTrace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawStepLog","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallInner","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CallType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CreateType","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_primitives_txpool"] = [{"text":"impl UnwindSafe for TxPoolResponse","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_trace"] = [{"text":"impl&lt;B, C&gt; !UnwindSafe for Trace&lt;B, C&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CacheBatchId","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for CacheRequester","synthetic":true,"types":[]},{"text":"impl&lt;B, C, BE&gt; !UnwindSafe for CacheTask&lt;B, C, BE&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_rpc_txpool"] = [{"text":"impl&lt;B, C, A&gt; !UnwindSafe for TxPool&lt;B, C, A&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_runtime"] = [{"text":"impl UnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !UnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonbeam_service"] = [{"text":"impl UnwindSafe for Extensions","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExtensionsFork","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbeamExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonriverExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonshadowExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbaseExecutor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverters","synthetic":true,"types":[]}];
implementors["moonkey"] = [{"text":"impl UnwindSafe for Opts","synthetic":true,"types":[]}];
implementors["moonriver_runtime"] = [{"text":"impl UnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !UnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["moonshadow_runtime"] = [{"text":"impl UnwindSafe for SessionKeys","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BaseFilter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockHashCount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockWeights","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockLength","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SS58Prefix","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxLocks","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExistentialDeposit","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; UnwindSafe for DealWithFees&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionByteFee","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MoonbeamGasWeightMapping","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BlockGasLimit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FixedGasPrice","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaximumSchedulerWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CouncilMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMotionDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TechComitteeMaxMembers","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LaunchPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FastTrackVotingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EnactmentPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CooloffPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxVotes","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProposals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreimageByteDeposit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InstantAllowed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBond","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProposalBondMinimum","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpendPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommunityTreasuryId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParachainBondPalletId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxApprovals","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TransactionConverter","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReservedXcmpWeight","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultBlocksPerRound","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BondDuration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinSelectedCandidates","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxNominatorsPerCollator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxCollatorsPerNominator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DefaultCollatorCommission","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinCollatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinNominatorStk","synthetic":true,"types":[]},{"text":"impl UnwindSafe for VestingPeriod","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MinimumReward","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Initialized","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitializationPayment","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DepositAmount","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxProxies","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositBase","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AnnouncementDepositFactor","synthetic":true,"types":[]},{"text":"impl UnwindSafe for MaxPending","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ProxyType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Runtime","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for Origin","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OriginCaller","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PalletInfo","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Call","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RuntimeApi","synthetic":true,"types":[]},{"text":"impl&lt;Block, C&gt; !UnwindSafe for RuntimeApiImpl&lt;Block, C&gt;","synthetic":true,"types":[]}];
implementors["pallet_author_mapping"] = [{"text":"impl&lt;T&gt; UnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for GenesisConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AuthorId: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["pallet_ethereum_chain_id"] = [{"text":"impl&lt;T&gt; UnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GenesisConfig","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStorageChainId&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["parachain_staking"] = [{"text":"impl&lt;T&gt; UnwindSafe for Range&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Balance&gt; UnwindSafe for InflationInfo&lt;Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for SubstrateWeight&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Pallet&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; UnwindSafe for Bond&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CollatorStatus","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; UnwindSafe for CollatorSnapshot&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; UnwindSafe for Collator&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;AccountId, Balance&gt; UnwindSafe for Nominator&lt;AccountId, Balance&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;BlockNumber&gt; UnwindSafe for RoundInfo&lt;BlockNumber&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;BlockNumber: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Error&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Event&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::BlockNumber: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for GenesisConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Call&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Config&gt;::AccountId: UnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;T as Config&gt;::Currency as Currency&lt;&lt;T as Config&gt;::AccountId&gt;&gt;::Balance: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStorageAtStake&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStorageStaked&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStorageInflationConfig&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStoragePoints&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for _GeneratedPrefixForStorageAwardedPts&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["precompiles"] = [{"text":"impl&lt;R&gt; UnwindSafe for MoonbeamPrecompiles&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()